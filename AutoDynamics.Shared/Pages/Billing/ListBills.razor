@page "/bill/view"
@using AutoDynamics.Shared.Modals
@using AutoDynamics.Shared.Services
@using System.Diagnostics
@inject IDatabaseHandler DatabaseHandler
@inject IAlertService AlertService
@inject IPDFGenerator PDFGenerator
@inject IMyLocalStorageService MyLocalStorageService
@inject NavigationManager Navigation
@inject ICurrentData CurrentData
@inject IJSRuntime JS
@inject IFormFactor FormFactor
@inject IDownloadExcel DownloadExcel
<h3 class="text-center mb-4">Billing Details</h3>

<div class="mb-3">
    <input type="text" @bind="searchQuery" class="form-control" placeholder="Search by Bill No" />
</div>

<div class="mb-3">
    <label>Sort By: </label>
    <select @bind="selectedSortOption" class="form-control">
        <option value="date">Today</option>
        <option value="month">Month to Date</option>
        <option value="year">Year to Date</option>
        <option value="range">Custom</option>
    </select>

    @if (selectedSortOption == "range")
    {
        <input type="date" @bind="startDate" class="form-control mt-2" />
        <input type="date" @bind="endDate" class="form-control mt-2" />
    }
</div>
<div class="w-100 d-flex justify-content-between align-items-md-center">
    <button class="btn btn-primary mb-3" @onclick="ApplyFilters">Apply Filters</button>
    @* <button class="btn btn-success mb-3" @onclick="generateExcel">Download Excel</button> *@
</div>
@if (billDetails == null || !billDetails.Any())
{
    <div class="alert alert-warning text-center">No billing records found.</div>
}
else
{
    <div class="col">
        @if (isAdmin || showSivakasi)
        {
            <div class="col-md-6 w-100">
                <div class="card shadow-lg">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">Sivakasi Branch</h5>
                    </div>
                    <div class="card-body">
                        @if (sivakasiBills.Any())
                        {
                            <table class="table table-bordered table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Bill No</th>
                                        <th>Customer ID</th>
                                        <th>Name</th>
                                        <th>Mobile No</th>
                                        <th>Branch</th>
                                        <th>Vehicle No</th>
                                        <th>Bill Date</th>
                                        <th>Total</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var bill in filteredSivakasiBills)
                                    {
                                        <tr>
                                            <td style="cursor:pointer;" @onclick="()=> ViewBill(bill)">@("SFR" + (bill.Bill.BillNo.ToString().PadLeft(4, '0')))</td>
                                            <td>@bill.Bill.CustomerID</td>
                                            <td>@bill.customer.Name</td>
                                            <td>@bill.customer.Contact</td>
                                            <td>@bill.Bill.Branch</td>
                                            <td>@bill.Bill.VehicleNo</td>
                                            <td>@bill.Bill.BillDate.ToString("yyyy-MM-dd")</td>
                                            <td>₹@(Math.Round(bill.Bill.TotalAmount))</td>
                                            <td>
                                                <button class="btn btn-sm btn-success" @onclick="() => DownloadBill(bill)">Download</button>
                                                @if (isAdmin)
                                                {
                                                    <button class="btn btn-sm btn-danger" @onclick="() => UpdateBill(bill)">Update</button>
                                                }
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <p class="text-muted text-center">No records for Sivakasi.</p>
                        }
                    </div>
                </div>
            </div>
        }
        @if (showByPass || isAdmin)
        {
            <div class="col-md-6 mt-5 w-100">
                <div class="card shadow-lg">
                    <div class="card-header bg-success text-white">
                        <h5 class="mb-0">Bypass Branch</h5>
                    </div>
                    <div class="card-body">
                        @if (bypassBills.Any())
                        {
                            <table class="table table-bordered table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Bill No</th>
                                        <th>Customer ID</th>
                                        <th>Name</th>
                                        <th>Mobile No</th>
                                        <th>Branch</th>
                                        <th>Vehicle No</th>
                                        <th>Bill Date</th>
                                        <th>Total</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var bill in filteredBypassBills)
                                    {
                                        <tr>
                                            <td style="cursor:pointer;" @onclick="()=> ViewBill(bill)">@("BPR"+(bill.Bill.BillNo.ToString().PadLeft(4,'0')))</td>
                                            <td>@bill.Bill.CustomerID</td>
                                            <td>@bill.customer.Name</td>
                                            <td>@bill.customer.Contact</td>
                                            <td>@bill.Bill.Branch</td>
                                            <td>@bill.Bill.VehicleNo</td>
                                            <td>@bill.Bill.BillDate.ToString("yyyy-MM-dd")</td>
                                            <td>₹@bill.Bill.TotalAmount</td>
                                            <td>
                                                <button class="btn btn-sm btn-success" @onclick="() => DownloadBill(bill)">Download</button>
                                                @if(isAdmin)
                                                {
                                                    <button class="btn btn-sm btn-danger" @onclick="() => UpdateBill(bill)">Update</button>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <p class="text-muted text-center">No records for Bypass.</p>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    List<BillDetails> billDetails = new();
    List<BillDetails> sivakasiBills = new();
    List<BillDetails> bypassBills = new();
    List<BillDetails> filteredSivakasiBills = new();
    List<BillDetails> filteredBypassBills = new();

    bool isAdmin = false;
    string branch = "";
    bool showSivakasi = false;
    bool showByPass = false;
    string searchQuery = "";
    string selectedSortOption = "month";
    DateTime? startDate;
    DateTime? endDate;

    public void generateExcel()
    {
        var today = DateTime.Today;
        var filtered = filteredSivakasiBills;
        DateTime startOfMonth = new DateTime(today.Year, today.Month, 1);

        filtered = filtered
            .Where(b => b.Bill.BillDate.Date >= startOfMonth && b.Bill.BillDate.Date <= today.Date)
            .ToList();

        string temp = $"{DateTime.Today:MMMM-yyyy}";
        string savedPath = DownloadExcel.DownloadExcelToDevice(filtered.ToArray(),temp);
        AlertService.ShowAlertAsync($"Excel Genration for the Month : {temp}", $"Saved at: {savedPath}", "Done");
    }

    private void ViewBill(BillDetails bill)
    {
        CurrentData.SetCurrentCustomer(bill);
        Navigation.NavigateTo("/bill/single-view");
    }

    private void UpdateBill(BillDetails bill)
    {
        CurrentData.SetCurrentCustomer(bill);
        Navigation.NavigateTo($"/updateBill");
    }
    async void DownloadBill(BillDetails data)
    {
        if(FormFactor.GetFormFactor() == "Web")
        {
            string path = await PDFGenerator.GeneratePdfAsync(data, JS);
            await AlertService.ShowAlertAsync("Download PDF", path, "OK");
        }
        else
        {
            string path = await PDFGenerator.GeneratePdfAsync(data,null);
            await AlertService.ShowAlertAsync("Download PDF", path, "OK");
        }

    }
    protected override async Task OnInitializedAsync()
    {
        if(FormFactor.GetFormFactor() =="Web")
        {
            Debug.WriteLine("Web");
        }
        else
        {
			Debug.WriteLine("Desktop");
        }
        billDetails = await DatabaseHandler.GetAllBillsAsync();
        isAdmin = await MyLocalStorageService.GetItemAsync("IsAdmin") == "true";
        branch = await MyLocalStorageService.GetItemAsync("Branch") ?? "";
        showSivakasi = branch == "Sivakasi";
        showByPass = !showSivakasi;
        sivakasiBills = billDetails.Where(b => b.Bill.Branch == "Sivakasi").ToList();
        bypassBills = billDetails.Where(b => b.Bill.Branch == "ByPass").ToList();
        ApplyFilters();
    }

    void ApplyFilters()
    {
        filteredSivakasiBills = FilterBills(sivakasiBills);
        filteredBypassBills = FilterBills(bypassBills);
    }

    List<BillDetails> FilterBills(List<BillDetails> bills)
    {
        var today = DateTime.Today;
        var filtered = bills;

        if (!string.IsNullOrEmpty(searchQuery))
        {
            filtered = filtered.Where(b => b.Bill.BillNo.ToString().Contains(searchQuery)).ToList();
        }

        if(selectedSortOption == "date")
        {
            filtered = filtered.Where(b => b.Bill.BillDate.Date == today.Date).ToList();
        }

        if (selectedSortOption == "month")
        {
            DateTime startOfMonth = new DateTime(today.Year, today.Month, 1);

            filtered = filtered
                .Where(b => b.Bill.BillDate.Date >= startOfMonth && b.Bill.BillDate.Date <= today.Date)
                .ToList();
        }
        if (selectedSortOption == "year")
        {
            int startYear = today.Month >= 4 ? today.Year : today.Year - 1; // Determine the financial year start
            DateTime startOfFinancialYear = new DateTime(startYear, 4, 1); // April 1 of the determined year
            DateTime endOfFinancialYear = new DateTime(startYear + 1, 3, 31); // March 31 of the next year

            filtered = filtered
                .Where(b => b.Bill.BillDate.Date >= startOfFinancialYear && b.Bill.BillDate.Date <= endOfFinancialYear)
                .ToList();
        }


        if (selectedSortOption == "range" && startDate.HasValue && endDate.HasValue)
        {
            Debug.WriteLine($"Start Date: {startDate.Value.Date}, End Date: {endDate.Value.Date}");
            Debug.WriteLine($"{billDetails[0].Bill.BillDate.Date}");
            filtered = filtered.Where(b => b.Bill.BillDate.Date >= startDate.Value.Date && b.Bill.BillDate.Date <= endDate.Value.Date).ToList();
        }

        return filtered.OrderBy(b => b.Bill.BillDate).ToList();
    }

}