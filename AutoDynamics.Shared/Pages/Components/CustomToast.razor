@using AutoDynamics.Shared.Modals.ComponentsTypes
@if (customToast.showToast)
{
    <div class="@GetToastClass(customToast.type) position-fixed top-0 end-0 m-3" style="z-index: 1050;">
        <div class="d-flex justify-content-between w-100 align-items-center">
            <p class="m-0 flex-grow-1">@customToast.message</p>
            <button type="button" class="btn btn-sm close-btn" @onclick="HideToast">X</button>
        </div>
    </div>
}

@code {
    [Parameter] public CustomToastType customToast { get; set; } = new CustomToastType();

    protected override void OnParametersSet()
    {
        if (customToast.showToast)
        {
            // Automatically dismiss the toast after 5 seconds
            _ = DismissToastAfterDelay();
        }
    }
    private async Task DismissToastAfterDelay()
    {
        await Task.Delay(5000); // Wait for 5 seconds
        customToast.showToast = false;
        StateHasChanged(); // Re-render the component
    }
    private void HideToast()
    {
        customToast.showToast = false;
    }

    private string GetToastClass(ToastType type)
    {
        return type switch
        {
            ToastType.sucess => "toast-success",
            ToastType.warning => "toast-warning",
            ToastType.info => "toast-info",
            ToastType.error => "toast-error",
            _ => "toast-default"
        };
    }
}
