@page "/vehicle/view"
@using AutoDynamics.Shared.Services
@using AutoDynamics.Shared.Modals
@inject IDatabaseHandler DatabaseHandler
@inject ICurrentData CurrentData
@inject NavigationManager Navigation
<div class="container mt-4">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">Customer Details</h4>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <p><strong>Vehicle No:</strong> @vehicle.VehicleNo</p>
                    <p><strong>Vehicle Make:</strong> @vehicle.VehicleMake</p>
                    <p><strong>Model Name:</strong> @vehicle.ModelName</p>
                    <p><strong>Mfg Year:</strong> @vehicle.MfgYear</p>
                    <p><strong>Desription:</strong> @vehicle.Description</p>
                    <p><strong>Created By:</strong> @vehicle.CreatedBy</p>
                    <p><strong>Created At:</strong> @vehicle.CreateAt</p>
                    <p><strong>Last Updated By:</strong> @vehicle.LastUpdatedBy</p>
                    <p><strong>Last Updated At:</strong> @vehicle.LastUpdatedAt</p>
                </div>
                <div class="col-md-6">
                    <p><strong>Customer ID:</strong> @customer.CustomerId</p>
                    <p><strong>Name:</strong> @customer.Name</p>
                    <p><strong>Contact:</strong> @customer.Contact</p>
                </div>
            </div>
        </div>
    </div>
</div>

@code{
    VehicleType vehicle { set; get; } = new VehicleType();
    UserModal customer { set; get; } = new UserModal();
    public void ViewCustomer()
    {
        CurrentData.SetCurrentCustomer(customer);
        Navigation.NavigateTo($"/customer/details");
    }
    protected override async Task OnInitializedAsync()
    {
        await FetchData();
    }
    public async Task FetchData()
    {
        vehicle = (VehicleType)CurrentData.GetCurrentCustomer();
        string vehicleQuery = $"SELECT * FROM Customers WHERE CustomerID = '{vehicle.CustomerID}'";
        
        var result = await DatabaseHandler.ExecuteQueryAsync(vehicleQuery);
        if(result.Count > 0)
        {
            var row = result[0];
            customer = new UserModal
            {
                    CustomerId = row["CustomerID"].ToString() ?? "",
                    Name = row["Name"].ToString() ?? "",
                    Contact = row["Contact"].ToString() ?? "",
                    Address = row["Address"].ToString() ?? "",
                    Area = row["Area"].ToString() ?? "",
                    City = row["City"].ToString() ?? "",
                    State = row["State"].ToString() ?? "",
                    Country = row["Country"].ToString() ?? "",
                    District = row["District"].ToString() ?? "",
                    Nationality = row["Nationality"].ToString() ?? "",
                    PinCode = row["PinCode"].ToString() ?? "",
                    Website = row["Website"].ToString() ?? "",
                    LastUpdatedBy = row["LastUpdatedBy"].ToString() ?? "",
                    Email = row["Email"].ToString() ?? "",
                    IsSMSAllowed = row["IsSMSAllowed"].ToString() == "True" ? true : false,
                    IsEmailAllowed = row["IsEmailAllowed"].ToString() == "True" ? true : false,
                    IsWhatsAppAllowed = row["IsWhatsAppAllowed"].ToString() == "True" ? true : false,
                    CreatedBy = row["CreatedBy"].ToString() ?? "",
                    CreateAt = row["CreatedAt"].ToString() ?? "",
                    LastUpdatedAt = row["LastUpdatedAt"].ToString() ?? ""
            };
        }
    }
}